# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthorBookEntity {
  """Authors of Book"""
  author: AuthorEntity!

  """Books of Author"""
  book: BookEntity!

  """ID of Relation"""
  id: Float!
}

type AuthorEntity {
  """Bio of Author"""
  bio: String!

  """Books of Author"""
  books: [AuthorBookEntity!]!

  """Created At of Author"""
  createdAt: DateTime!

  """First Name of Author"""
  firstName: String!

  """ID of Author"""
  id: Float!

  """Last Name of Author"""
  lastName: String!

  """Thumpnail of Author"""
  thumpnail: ImageJson!

  """Updated At of Author"""
  updatedAt: DateTime!
}

type BookCategoryEntity {
  """Books of Author"""
  book: BookEntity!

  """Authors of Book"""
  category: CategoryEntity!

  """ID of Relation"""
  id: Float!
}

type BookEntity {
  """Authors of Book"""
  authors: [AuthorBookEntity!]!

  """Review of Book"""
  avgRating: Float!

  """Categories of Book"""
  categories: [BookCategoryEntity!]!

  """Title of Book"""
  createdAt: DateTime!

  """Description of Book"""
  description: String!

  """Discount of Book"""
  discount: Float!

  """Id of Book"""
  id: Float!

  """Images of Book"""
  images: [ImageJson!]!

  """Price of Book"""
  price: Float!

  """Promotion of Book"""
  promotion: PromotionEntity

  """Quantity of Book"""
  quantity: Float!

  """All Reviews of this Book"""
  reviews: [ReviewEntity!]!

  """Title of Book"""
  title: String!

  """Title of Book"""
  updatedAt: DateTime!
}

type Cart {
  """Cart Items"""
  cartItems: [CartItemEntity!]!

  """ID of Cart"""
  id: Float!

  """User"""
  user: UserEntity!

  """ID of User"""
  userId: Float!
}

type CartItemEntity {
  """Book"""
  book: BookEntity!

  """Book Id"""
  bookId: Float!

  """ID of CartItem"""
  id: Float!

  """Quantity of Item"""
  quantity: Float!
}

type CategoryEntity {
  """Description of Category"""
  banner: String!

  """Description of Category"""
  bannerColor: String!

  """Name of Category"""
  books: [BookCategoryEntity!]!

  """Description of Category"""
  description: String!

  """ID of Category"""
  id: Int!

  """Name of Category"""
  name: String!
}

type Chat {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateCartInput {
  """User id"""
  userId: Float!
}

input CreateCartItemInput {
  """ID of book"""
  bookId: Int!

  """cart ID of book"""
  cartId: Int!

  """quantity of book"""
  quantity: Int!
}

input CreateChatInput {
  """Example field (placeholder)"""
  content: String!

  """user ID"""
  userId: Int!
}

input CreateOrderInput {
  """address of order"""
  address: String!

  """Email of order user"""
  email: String!

  """First Name of order user"""
  firstName: String!

  """Last Name of order user"""
  lastName: String!

  """Order Items of order user"""
  orderItems: [OrderItemsConnect!]!

  """phone of order"""
  phone: String!

  """quantity of books"""
  quantity: Float!

  """price of total books"""
  total: Float!

  """User ID"""
  userId: Float
}

input CreateReviewInput {
  """Book ID"""
  bookId: Float!

  """rating of Review"""
  comment: String!

  """rating of Review"""
  rating: Float!

  """User Id"""
  userId: Float
}

input CreateUserInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FilterBy {
  """filter by field"""
  field: String!

  """Value of the Filter field"""
  in: [Float!]!
}

type ImageJson {
  """Key of the image"""
  key: String!

  """Name of the image"""
  name: String!

  """Size of the image"""
  size: Float!

  """URL of the image"""
  url: String!
}

type Mutation {
  createCart(createCart: CreateCartInput!): Cart!
  createCartItem(createCartItem: CreateCartItemInput!): CartItemEntity!
  createChat(createChatInput: CreateChatInput!): Chat!
  createOrder(createOrder: CreateOrderInput!): OrderEntity!
  createReview(createReviewInput: CreateReviewInput!): ReviewEntity!
  createUser(createUserInput: CreateUserInput!): UserEntity!
  removeCart(id: Int!): Cart!
  removeCartItem(id: Int!): CartItemEntity!
  removeChat(id: Int!): Chat!
  removeReview(id: Int!): ReviewEntity!
  removeUser(id: Int!): UserEntity!
  signIn(signInInput: SignInInput!): SignResponse!
  signUp(signUpInput: SignUpInput!): SignResponse!
  updateBook(updateBookInput: UpdateBookInput!): BookEntity!
  updateCartItem(updateCartItem: UpdateCartItemInput!): CartItemEntity!
  updateChat(updateChatInput: UpdateChatInput!): Chat!
  updateUser(updateUserInput: UpdateUserInput!): UserEntity!
}

type OrderEntity {
  """Address of Order"""
  address: String!

  """First Name of Order"""
  firstName: String!

  """ID of Order"""
  id: Int!

  """Last Name of Order"""
  lastName: String!

  """Items of Order"""
  orderItems: [OrderItemEntity!]!

  """Phone of Order"""
  phone: String!

  """Status of Order"""
  status: String!

  """Total Price of Order"""
  total: Float!

  """Address of Order"""
  user: UserEntity
}

type OrderItemEntity {
  """Book of Order Item"""
  book: BookEntity!

  """Book ID"""
  bookId: Int!

  """ID of Item"""
  id: Int!

  """Order ID"""
  orderId: Int!

  """Price of the Items"""
  price: Float!

  """Quantity of Item"""
  quantity: Int!
}

input OrderItemsConnect {
  """ID of book"""
  bookId: Float!

  """Price of books"""
  price: Float!

  """Quantity of books"""
  quantity: Float!
}

type PromotionEntity {
  """Books of Promotions"""
  books: [BookEntity!]

  """Type Promotion"""
  endDate: DateTime!

  """ID of Promotion"""
  id: Int!

  """Type Promotion"""
  startDate: DateTime!

  """Type Promotion"""
  type: TypePromotionEntity!
}

input PromotionSortBy {
  """sort by field"""
  field: String!

  """Order by asc or desc"""
  order: String!
}

type Query {
  author(id: Int!): AuthorEntity!
  authors(limit: Float, order: String, page: Float, search: String, sortBy: String): [AuthorEntity!]!
  book(id: Int!): BookEntity!
  books(except: String, filter: [FilterBy!], limit: Float, page: Float, search: [SearchBy!], sortBy: [SortBy!]): [BookEntity!]!
  cart(id: Int!): Cart!
  categories(order: String, search: String, sortBy: String): [CategoryEntity!]!
  category(id: Int!): CategoryEntity!
  chat(id: Int!): Chat!
  checkCart(id: Int): Boolean!
  checkCartItem(bookId: Int!, cartId: Int!): Boolean!
  order(id: Int!): OrderEntity!
  orders(userID: Int): [OrderEntity!]!
  promotion(id: Int!): PromotionEntity!
  promotions(limit: Float, sortBy: [PromotionSortBy!]): [PromotionEntity!]!
  reviews(bookId: Int!): [ReviewEntity!]!
  totalAuthors(search: String): Float!
  totalBooks(except: String, filter: [FilterBy!], search: [SearchBy!]): Float!
  user(id: Int!): UserEntity!
}

type ReviewEntity {
  """Book of Review"""
  book: BookEntity!

  """Comment of Review"""
  comment: String!

  """Created At of Review"""
  createdAt: DateTime!

  """Id of Review"""
  id: Float!

  """Rating of Review"""
  rating: Float!

  """Updated At of Review"""
  updatedAt: DateTime!

  """User comments"""
  user: UserEntity
}

input SearchBy {
  """Value of the Filter field"""
  contains: String!

  """Search by field"""
  field: String!
}

input SignInInput {
  email: String!
  password: String!
}

type SignResponse {
  accessToken: String!
  refreshToken: String!
  user: UserEntity!
}

input SignUpInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  username: String!
}

input SortBy {
  """sort by field"""
  field: String!

  """Order by asc or desc"""
  order: String!
}

type TypePromotionEntity {
  """Sale Type of Promotion"""
  saleType: String!

  """Sale Type of Promotion"""
  saleValue: String!
}

input UpdateBookInput {
  id: Int!

  """Update Quantity of Book"""
  quantity: Float!
}

input UpdateCartItemInput {
  """ID of Cart Item"""
  id: Int!

  """quantity of Cart Item"""
  quantity: Int!
}

input UpdateChatInput {
  """Example field (placeholder)"""
  content: String
  id: Int!

  """user ID"""
  userId: Int
}

input UpdateUserInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

type UserEntity {
  email: String!
  firstName: String!
  id: Int!
  lastName: String!
  username: String!
}